version: '3.8'

services:
  mongodb:
    image: mongo:6.0
    container_name: amazon_clone_mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password123
      - MONGO_INITDB_DATABASE=amazon_clone
    volumes:
      - mongodb_data:/data/db
    networks:
      - amazon-network

  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: amazon_clone_backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/amazon_clone?authSource=admin
      - JWT_SECRET=your-jwt-secret-key-here
    depends_on:
      - mongodb
    networks:
      - amazon-network
    volumes:
      - ./server:/usr/src/app
      - /usr/src/app/node_modules

  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: amazon_clone_frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - amazon-network

  mongo-express:
    image: mongo-express:1.0.0
    container_name: amazon_clone_mongo_express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password123
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin123
    depends_on:
      - mongodb
    networks:
      - amazon-network

networks:
  amazon-network:
    driver: bridge

volumes:
  mongodb_data: