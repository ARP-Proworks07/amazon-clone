apiVersion: v1
kind: Secret
metadata:
  name: backend-secret
  namespace: amazon-clone
type: Opaque
data:
  # jwt-secret-key-here (base64 encoded)
  jwt-secret: and0LXNlY3JldC1rZXktaGVyZQ==

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: backend-config
  namespace: amazon-clone
data:
  NODE_ENV: "production"
  PORT: "3001"
  MONGODB_URI: "mongodb://admin:password123@mongodb-service:27017/amazon_clone?authSource=admin"
  CORS_ORIGIN: "http://localhost:3000"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: amazon-clone-backend
  namespace: amazon-clone
  labels:
    app: amazon-clone-backend
    component: api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: amazon-clone-backend
  template:
    metadata:
      labels:
        app: amazon-clone-backend
        component: api
    spec:
      serviceAccountName: default
      automountServiceAccountToken: false
      containers:
      - name: backend
        image: amazon-clone-backend:BACKEND_IMAGE_TAG
        ports:
        - containerPort: 3001
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: NODE_ENV
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: PORT
        - name: MONGODB_URI
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: MONGODB_URI
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: backend-secret
              key: jwt-secret
        - name: CORS_ORIGIN
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: CORS_ORIGIN
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
            ephemeral-storage: "100Mi"
          limits:
            memory: "256Mi"
            cpu: "200m"
            ephemeral-storage: "500Mi"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3001
          initialDelaySeconds: 15
          periodSeconds: 15
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false

---
apiVersion: v1
kind: Service
metadata:
  name: amazon-clone-backend-service
  namespace: amazon-clone
  labels:
    app: amazon-clone-backend
spec:
  selector:
    app: amazon-clone-backend
  ports:
  - name: http
    port: 3001
    targetPort: 3001
  type: ClusterIP

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: amazon-clone-backend-hpa
  namespace: amazon-clone
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: amazon-clone-backend
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80